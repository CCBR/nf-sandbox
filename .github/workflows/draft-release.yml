name: draft-release

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/draft-release.yml

jobs:
  draft-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required to include tags
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      - run: pip install cffconvert>=2.0.0
      - name: Get Date
        run: |
          echo "DATE=$(date +"%Y-%m-%d")" >> "$GITHUB_ENV"
      - name: Get current and next versions
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: ${{ github.ref_name }}

      - name: Get release notes from changelog
        shell: python {0}
        run: |
          import os
          latest_version = "${{ steps.semver.outputs.current }}".strip('v')
          next_version = "${{ steps.semver.outputs.next }}".strip('v')
          changelog_lines = list()
          next_release_lines = list()
          for_next = True
          with open("CHANGELOG.md", "r") as infile:
            for line in infile:
              if line.startswith('#') and 'development version' in line:
                line = line.replace('development version', next_version)
              elif latest_version in line:
                for_next = False

              changelog_lines.append(line)
              if for_next:
                next_release_lines.append(line)

          with open(".github/latest-release.md", "w") as outfile:
            outfile.write(''.join(next_release_lines))
          with open('CHANGELOG.md', 'w') as outfile:
            outfile.write(''.join(changelog_lines))

      - name: Update citation file
        shell: python {0}
        run: |
          from cffconvert.cli.create_citation import create_citation
          from cffconvert.cli.validate_or_write_output import validate_or_write_output
          citation = create_citation('CITATION.cff', None)
          citation._implementation.cffobj['version'] = "${{ steps.semver.outputs.next }}"
          citation._implementation.cffobj['date-released'] = "${{ env.DATE }}"
          validate_or_write_output("CITATION.cff", 'cff', False, citation)

      - name: Commit & push to branch
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git switch -c release/${{ steps.semver.outputs.next }}
          git add CITATION.cff CHANGELOG.md
          git commit -m 'chore: prepare release ${{ steps.semver.outputs.next }}' || echo "No changes to commit"
          git push

      - name: Tag & draft release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.semver.outputs.next }}
          release_name: ${{ github.event.repository.name }} ${{ steps.semver.outputs.next }}
          draft: true
          body_path: .github/latest-release.md
      - name: Next steps
        run: |
          echo "Next steps: Take a look at the changes in release/${{ steps.semver.outputs.next }}. If everything is correct, publish the draft release."
